# PaperSorter Docker Environment Configuration
# Copy this file to .env and fill in your values

# ============================================
# Database Configuration
# ============================================
POSTGRES_DB=papersorter
POSTGRES_USER=papersorter
POSTGRES_PASSWORD=changeme  # CHANGE THIS!

# ============================================
# Application Configuration
# ============================================
# Flask secret key for session management (generate with: python -c "import secrets; print(secrets.token_hex(32))")
FLASK_SECRET_KEY=your-secret-key-here

# Site configuration
SITE_NAME=PaperSorter
BASE_URL=http://localhost  # Change to https://your-domain.com for production
DOMAIN=localhost  # Change to your-domain.com for production
ADMIN_EMAIL=admin@example.com  # Used for Let's Encrypt SSL certificates

# ============================================
# OAuth Configuration
# ============================================
# Google OAuth (https://console.cloud.google.com/)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# GitHub OAuth (https://github.com/settings/developers)
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

# ORCID OAuth (https://orcid.org/developer-tools)
ORCID_CLIENT_ID=
ORCID_CLIENT_SECRET=

# ============================================
# API Keys
# ============================================
# OpenAI or compatible API for embeddings
OPENAI_API_KEY=
EMBEDDING_API_URL=https://api.openai.com/v1  # Or your custom endpoint

# Summarization API (e.g., Gemini)
SUMMARIZATION_API_KEY=
SUMMARIZATION_API_URL=https://generativelanguage.googleapis.com/v1beta/openai

# Semantic Scholar API
SEMANTIC_SCHOLAR_API_KEY=

# OpenAlex (if using instead of Semantic Scholar)
OPENALEX_EMAIL=your-email@domain.com

# ============================================
# Port Configuration (optional)
# ============================================
HTTP_PORT=80
HTTPS_PORT=443

# ============================================
# Resource Limits (optional, for production)
# ============================================
# Uncomment and adjust for production deployments
# WEB_MEMORY_LIMIT=4G
# WEB_CPU_LIMIT=2
# DB_MEMORY_LIMIT=2G
# DB_CPU_LIMIT=2